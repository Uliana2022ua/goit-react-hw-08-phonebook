{"version":3,"file":"static/js/993.7e1dc000.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.jsx","pages/Registration/Registration.jsx","schemas/contactFormSchema.js","schemas/loginFormSchema.js","schemas/registrationFormSchema.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst styledFormDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  margin-top: 20px;\n  padding: 30px;\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.secondaryBackgroundColor};\n  box-shadow: ${theme.boxShadow};\n`;\n\nconst styledLabelDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${theme.colors.mainColor};\n  div {\n    padding: 12px;\n    border: 2px solid ${theme.colors.mainColor};\n    border-radius: ${theme.borderRadius};\n    background-color: ${theme.colors.accentBackgroundColor};\n    color: ${theme.colors.secondaryBackgroundColor};\n    width: 100%;\n    font-size: 16px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`;\n\nconst styledInputDynamicStyle = ({ theme }) => css`\n  width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.mainBackgroundColor};\n  &::placeholder {\n    font-size: 16px;\n    color: ${theme.colors.mainColor};\n  }\n`;\n\nconst styledButtonDynamicStyle = ({ theme }) => css`\n  width: 100%;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  background-color: ${theme.colors.mainBackgroundColor};\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledForm = styled.form`\n  ${styledFormDynamicStyle}\n`;\n\nexport const StyledLabel = styled.label`\n  ${styledLabelDynamicStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${styledInputDynamicStyle}\n`;\n\nexport const StyledButton = styled.button`\n  ${styledButtonDynamicStyle}\n`;","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { userSignUp } from 'redux/auth/operations';\nimport { registrationFormSchema } from 'schemas';\nimport {\n  StyledLabel,\n  StyledForm,\n  StyledInput,\n  StyledButton,\n} from './RegistrationForm.styled';\n\nfunction RegistrationForm() {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    formState,\n  } = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    resolver: yupResolver(registrationFormSchema),\n    mode: 'onTouched',\n  });\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset();\n    }\n  }, [formState.isSubmitSuccessful, reset]);\n\n  const registerUser = data => {\n    dispatch(userSignUp(data));\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(registerUser)}>\n      <StyledLabel>\n        Name\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n          {...register('name')}\n        />\n        {errors.name && <div>{errors.name?.message}</div>}\n      </StyledLabel>\n\n      <StyledLabel>\n        Email\n        <StyledInput\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n      </StyledLabel>\n\n      <StyledLabel>\n        Password\n        <StyledInput\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n      </StyledLabel>\n\n      <StyledButton type=\"submit\">Register</StyledButton>\n    </StyledForm>\n  );\n}\n\nexport default RegistrationForm;","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'react-router-dom';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst formTitleDynamicStyle = ({ theme }) => css`\n  margin: 20px 0 0 0;\n  color: ${theme.colors.mainColor};\n`;\n\nconst userTextDynamicStyle = ({ theme }) => css`\n  margin-top: 20px;\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n`;\n\nconst loginLinkDynamicStyle = ({ theme }) => css`\n  display: block;\n  width: 280px;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  text-align: center;\n  color: ${theme.colors.mainColor};\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: 8px;\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  ${formTitleDynamicStyle}\n`;\n\nexport const UserText = styled.p`\n  ${userTextDynamicStyle}\n`;\n\nexport const LoginLink = styled(Link)`\n  ${loginLinkDynamicStyle}\n`;","import RegistrationForm from 'components/RegistrationForm';\nimport {\n  FormWrapper,\n  UserText,\n  LoginLink,\n  FormTitle,\n} from './Registration.styled';\n\nfunction Registration() {\n  return (\n    <FormWrapper>\n      <FormTitle>Create account</FormTitle>\n      <RegistrationForm />\n      <UserText>Already have an account?</UserText>\n      <LoginLink to=\"/login\">Log in</LoginLink>\n    </FormWrapper>\n  );\n}\n\nexport default Registration;","import * as yup from 'yup';\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nexport const contactFormSchema = yup.object().shape({\n    name: yup\n      .string()\n      .trim()\n      .max(64)\n      .required('Name is required')\n      .matches(nameRegex, {\n        message:\n          \"Invalid name. Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n      }),\n  \n    number: yup\n      .string()\n      .trim()\n      .required('Number is required')\n      .min(5)\n      .matches(numberRegex, {\n        message:\n          'Invalid number. Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n      }),\n  });","import * as yup from 'yup';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const loginFormSchema = yup.object().shape({\n  email: yup.string().trim().required('Email is required').matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup.string().trim().required('Password is required').min(6),\n});","import * as yup from 'yup';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const registrationFormSchema = yup.object().shape({\n  name: yup.string().trim().required('Name is required'),\n  email: yup.string().trim().required('Email is required').matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup\n    .string()\n    .trim()\n    .required('Password is required')\n    .min(8),\n});\n"],"names":["StyledForm","styled","theme","css","borderRadius","colors","secondaryBackgroundColor","boxShadow","StyledLabel","mainColor","accentBackgroundColor","StyledInput","mainBackgroundColor","StyledButton","fontStyles","size","weight","accentColor","dispatch","useDispatch","useForm","defaultValues","name","email","password","resolver","yupResolver","registrationFormSchema","mode","register","handleSubmit","errors","formState","reset","useEffect","isSubmitSuccessful","onSubmit","data","userSignUp","type","placeholder","autoComplete","message","FormWrapper","FormTitle","UserText","LoginLink","Link","to","contactFormSchema","yup","shape","trim","max","required","matches","number","min","loginFormSchema"],"sourceRoot":""}